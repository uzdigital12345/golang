// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Assignee             string   `protobuf:"bytes,2,opt,name=Assignee,proto3" json:"Assignee,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Deadline             string   `protobuf:"bytes,4,opt,name=Deadline,proto3" json:"Deadline,omitempty"`
	Done                 bool     `protobuf:"varint,5,opt,name=Done,proto3" json:"Done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Task) GetAssignee() string {
	if m != nil {
		return m.Assignee
	}
	return ""
}

func (m *Task) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Task) GetDeadline() string {
	if m != nil {
		return m.Deadline
	}
	return ""
}

func (m *Task) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

type GetTasks struct {
	Tasks                []*Task  `protobuf:"bytes,1,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTasks) Reset()         { *m = GetTasks{} }
func (m *GetTasks) String() string { return proto.CompactTextString(m) }
func (*GetTasks) ProtoMessage()    {}
func (*GetTasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *GetTasks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTasks.Unmarshal(m, b)
}
func (m *GetTasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTasks.Marshal(b, m, deterministic)
}
func (m *GetTasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTasks.Merge(m, src)
}
func (m *GetTasks) XXX_Size() int {
	return xxx_messageInfo_GetTasks.Size(m)
}
func (m *GetTasks) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTasks.DiscardUnknown(m)
}

var xxx_messageInfo_GetTasks proto.InternalMessageInfo

func (m *GetTasks) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type IdRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateTaskRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateTaskRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "proto.Task")
	proto.RegisterType((*EmptyMessage)(nil), "proto.emptyMessage")
	proto.RegisterType((*GetTasks)(nil), "proto.GetTasks")
	proto.RegisterType((*IdRequest)(nil), "proto.IdRequest")
	proto.RegisterType((*UpdateTaskRequest)(nil), "proto.UpdateTaskRequest")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0xa5, 0x2d, 0xe5, 0x2b, 0xc3, 0x27, 0xe8, 0xea, 0x61, 0x83, 0x97, 0xd2, 0x53, 0xd5, 0x48,
	0x0c, 0x26, 0x26, 0x24, 0x5e, 0x48, 0x48, 0x9a, 0x26, 0x12, 0x93, 0x06, 0x7e, 0xc0, 0xca, 0x0e,
	0xd8, 0x50, 0x17, 0xec, 0x2e, 0x44, 0xff, 0x8f, 0x3f, 0xd4, 0x74, 0x5b, 0xb0, 0x41, 0x13, 0xf4,
	0xb4, 0xf3, 0xe6, 0xbd, 0x97, 0x7d, 0x33, 0x03, 0x47, 0x12, 0xd3, 0x4d, 0x3c, 0xc5, 0xee, 0x2a,
	0x5d, 0xaa, 0x25, 0xb1, 0xf5, 0xe3, 0xbd, 0x41, 0x75, 0xcc, 0xe4, 0x82, 0x34, 0xc1, 0x0c, 0x39,
	0x35, 0x5c, 0xc3, 0xb7, 0x22, 0x33, 0xe4, 0xa4, 0x0d, 0xce, 0x40, 0xca, 0x78, 0x2e, 0x10, 0xa9,
	0xe9, 0x1a, 0x7e, 0x3d, 0xda, 0x61, 0x72, 0x06, 0xf6, 0x38, 0x56, 0x09, 0x52, 0x4b, 0x13, 0x39,
	0xc8, 0x1c, 0x43, 0x64, 0x3c, 0x89, 0x05, 0xd2, 0x6a, 0xee, 0xd8, 0x62, 0x42, 0xa0, 0x3a, 0x5c,
	0x0a, 0xa4, 0xb6, 0x6b, 0xf8, 0x4e, 0xa4, 0x6b, 0xaf, 0x09, 0xff, 0xf1, 0x65, 0xa5, 0xde, 0x47,
	0x28, 0x25, 0x9b, 0xa3, 0x77, 0x0d, 0x4e, 0x80, 0x2a, 0x0b, 0x23, 0x49, 0x07, 0x6c, 0x5d, 0x50,
	0xc3, 0xb5, 0xfc, 0x46, 0xaf, 0x91, 0x67, 0xee, 0x66, 0xbd, 0x28, 0x67, 0xbc, 0x73, 0xa8, 0x87,
	0x3c, 0xc2, 0xd7, 0x35, 0x4a, 0xb5, 0x9f, 0xde, 0xeb, 0xc3, 0xc9, 0x64, 0xc5, 0x99, 0x42, 0xed,
	0xf8, 0x59, 0xf4, 0x35, 0x86, 0x59, 0x1a, 0xa3, 0xf7, 0x61, 0x01, 0xcd, 0x5c, 0x0f, 0xb1, 0x54,
	0x23, 0x26, 0xd8, 0x1c, 0xd3, 0x50, 0x28, 0x4c, 0x67, 0x6c, 0x8a, 0xa4, 0x03, 0xd6, 0x80, 0x73,
	0x52, 0xce, 0xd3, 0x2e, 0x03, 0xaf, 0x42, 0xee, 0xa0, 0x51, 0x7c, 0xad, 0xb7, 0x42, 0x0b, 0xf6,
	0x5b, 0x9c, 0x7d, 0xdf, 0x05, 0xd4, 0x86, 0x98, 0xa0, 0x42, 0x72, 0x5c, 0x10, 0xbb, 0xf1, 0xf6,
	0xa5, 0x57, 0xe0, 0x8c, 0xd8, 0x02, 0xb3, 0x2d, 0x1e, 0x16, 0x5f, 0xc2, 0xbf, 0x62, 0xad, 0x87,
	0xb5, 0xf7, 0x40, 0x02, 0x54, 0x13, 0x31, 0x8b, 0x45, 0x2c, 0x9f, 0x91, 0xe7, 0xc7, 0x38, 0x2d,
	0x44, 0xe5, 0x6b, 0xb5, 0x5b, 0x45, 0x73, 0x7b, 0x32, 0xaf, 0x42, 0xfa, 0xd0, 0x0a, 0x50, 0x3d,
	0x6e, 0x30, 0xe5, 0x6b, 0xfc, 0x9b, 0xf5, 0x06, 0x6a, 0x01, 0xaa, 0x41, 0x92, 0xfc, 0xd6, 0xf1,
	0x54, 0xd3, 0x9d, 0xdb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0x9f, 0xd8, 0x52, 0xd6, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskListManagerInterfaceClient is the client API for TaskListManagerInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskListManagerInterfaceClient interface {
	Add(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error)
	UpdateTitle(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*Task, error)
	Delete(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Task, error)
	MakeDone(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Task, error)
	GetTask(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Task, error)
	GetUnfinishedTasks(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*GetTasks, error)
	GetOverdueTasks(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*GetTasks, error)
	GetAll(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*GetTasks, error)
}

type taskListManagerInterfaceClient struct {
	cc *grpc.ClientConn
}

func NewTaskListManagerInterfaceClient(cc *grpc.ClientConn) TaskListManagerInterfaceClient {
	return &taskListManagerInterfaceClient{cc}
}

func (c *taskListManagerInterfaceClient) Add(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListManagerInterfaceClient) UpdateTitle(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/UpdateTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListManagerInterfaceClient) Delete(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListManagerInterfaceClient) MakeDone(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/MakeDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListManagerInterfaceClient) GetTask(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListManagerInterfaceClient) GetUnfinishedTasks(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*GetTasks, error) {
	out := new(GetTasks)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/GetUnfinishedTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListManagerInterfaceClient) GetOverdueTasks(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*GetTasks, error) {
	out := new(GetTasks)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/GetOverdueTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListManagerInterfaceClient) GetAll(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*GetTasks, error) {
	out := new(GetTasks)
	err := c.cc.Invoke(ctx, "/proto.TaskListManagerInterface/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskListManagerInterfaceServer is the server API for TaskListManagerInterface service.
type TaskListManagerInterfaceServer interface {
	Add(context.Context, *Task) (*Task, error)
	UpdateTitle(context.Context, *UpdateTaskRequest) (*Task, error)
	Delete(context.Context, *IdRequest) (*Task, error)
	MakeDone(context.Context, *IdRequest) (*Task, error)
	GetTask(context.Context, *IdRequest) (*Task, error)
	GetUnfinishedTasks(context.Context, *EmptyMessage) (*GetTasks, error)
	GetOverdueTasks(context.Context, *EmptyMessage) (*GetTasks, error)
	GetAll(context.Context, *EmptyMessage) (*GetTasks, error)
}

// UnimplementedTaskListManagerInterfaceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskListManagerInterfaceServer struct {
}

func (*UnimplementedTaskListManagerInterfaceServer) Add(ctx context.Context, req *Task) (*Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedTaskListManagerInterfaceServer) UpdateTitle(ctx context.Context, req *UpdateTaskRequest) (*Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTitle not implemented")
}
func (*UnimplementedTaskListManagerInterfaceServer) Delete(ctx context.Context, req *IdRequest) (*Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTaskListManagerInterfaceServer) MakeDone(ctx context.Context, req *IdRequest) (*Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeDone not implemented")
}
func (*UnimplementedTaskListManagerInterfaceServer) GetTask(ctx context.Context, req *IdRequest) (*Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedTaskListManagerInterfaceServer) GetUnfinishedTasks(ctx context.Context, req *EmptyMessage) (*GetTasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnfinishedTasks not implemented")
}
func (*UnimplementedTaskListManagerInterfaceServer) GetOverdueTasks(ctx context.Context, req *EmptyMessage) (*GetTasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOverdueTasks not implemented")
}
func (*UnimplementedTaskListManagerInterfaceServer) GetAll(ctx context.Context, req *EmptyMessage) (*GetTasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterTaskListManagerInterfaceServer(s *grpc.Server, srv TaskListManagerInterfaceServer) {
	s.RegisterService(&_TaskListManagerInterface_serviceDesc, srv)
}

func _TaskListManagerInterface_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).Add(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskListManagerInterface_UpdateTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).UpdateTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/UpdateTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).UpdateTitle(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskListManagerInterface_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).Delete(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskListManagerInterface_MakeDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).MakeDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/MakeDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).MakeDone(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskListManagerInterface_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).GetTask(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskListManagerInterface_GetUnfinishedTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).GetUnfinishedTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/GetUnfinishedTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).GetUnfinishedTasks(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskListManagerInterface_GetOverdueTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).GetOverdueTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/GetOverdueTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).GetOverdueTasks(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskListManagerInterface_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskListManagerInterfaceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskListManagerInterface/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskListManagerInterfaceServer).GetAll(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskListManagerInterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TaskListManagerInterface",
	HandlerType: (*TaskListManagerInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _TaskListManagerInterface_Add_Handler,
		},
		{
			MethodName: "UpdateTitle",
			Handler:    _TaskListManagerInterface_UpdateTitle_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TaskListManagerInterface_Delete_Handler,
		},
		{
			MethodName: "MakeDone",
			Handler:    _TaskListManagerInterface_MakeDone_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _TaskListManagerInterface_GetTask_Handler,
		},
		{
			MethodName: "GetUnfinishedTasks",
			Handler:    _TaskListManagerInterface_GetUnfinishedTasks_Handler,
		},
		{
			MethodName: "GetOverdueTasks",
			Handler:    _TaskListManagerInterface_GetOverdueTasks_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _TaskListManagerInterface_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
